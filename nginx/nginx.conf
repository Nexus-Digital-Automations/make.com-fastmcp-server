# ==============================================================================
# Nginx Configuration for Make.com FastMCP Server
# Production-ready reverse proxy with security hardening
# ==============================================================================

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ===========================================================================
    # Basic Configuration
    # ===========================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
                    
    access_log /var/log/nginx/access.log main;
    
    # ===========================================================================
    # Performance Optimization
    # ===========================================================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ===========================================================================
    # Security Headers and Hardening
    # ===========================================================================
    
    # Hide nginx version
    server_tokens off;
    
    # Security headers (applied globally)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self'; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';" always;
    
    # ===========================================================================
    # Rate Limiting
    # ===========================================================================
    
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=health:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # ===========================================================================
    # Upstream Configuration
    # ===========================================================================
    upstream fastmcp_backend {
        least_conn;
        server make-fastmcp-server:3000 max_fails=3 fail_timeout=30s;
        # Additional servers can be added here for load balancing
        # server make-fastmcp-server-2:3000 max_fails=3 fail_timeout=30s;
        
        # Health check (requires nginx-plus or custom module)
        # health_check interval=30s fails=3 passes=2 uri=/health;
        
        keepalive 32;
    }
    
    # ===========================================================================
    # SSL Configuration (for HTTPS)
    # ===========================================================================
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # ===========================================================================
    # HTTP Server (Redirect to HTTPS)
    # ===========================================================================
    server {
        listen 80;
        server_name _;
        
        # Security headers for HTTP
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }
    
    # ===========================================================================
    # HTTPS Server (Main Application)
    # ===========================================================================
    server {
        listen 443 ssl http2;
        server_name localhost;  # Replace with your domain
        
        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Trusted certificate chain (for OCSP stapling)
        # ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
        
        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Connection limiting
        limit_conn conn_limit_per_ip 20;
        
        # ===========================================================================
        # Health Check Endpoint (Higher Rate Limit)
        # ===========================================================================
        location /health {
            limit_req zone=health burst=10 nodelay;
            
            proxy_pass http://fastmcp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            
            # Disable access logging for health checks (reduce noise)
            access_log off;
        }
        
        # ===========================================================================
        # API Endpoints (Standard Rate Limiting)
        # ===========================================================================
        location /api {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://fastmcp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # API specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
            
            # Buffer settings for API requests
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # ===========================================================================
        # MCP SSE Endpoint (WebSocket and Server-Sent Events)
        # ===========================================================================
        location /sse {
            limit_req zone=general burst=5 nodelay;
            
            proxy_pass http://fastmcp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # SSE specific settings
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s; # 24 hours for long-lived connections
            proxy_send_timeout 86400s;
            
            # Chunked transfer encoding
            chunked_transfer_encoding on;
        }
        
        # ===========================================================================
        # Main Application (Root)
        # ===========================================================================
        location / {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://fastmcp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Standard timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ===========================================================================
        # Security: Block Common Attack Patterns
        # ===========================================================================
        
        # Block access to hidden files and directories
        location ~ /\. {
            deny all;
            return 404;
        }
        
        # Block access to common sensitive files
        location ~* \.(env|log|conf|config|ini|sql|bak|old|backup)$ {
            deny all;
            return 404;
        }
        
        # Block common exploit attempts
        location ~* (eval\(|base64_decode|gzinflate|file_get_contents|shell_exec|phpinfo|system\(|passthru\() {
            deny all;
            return 403;
        }
        
        # ===========================================================================
        # Error Pages
        # ===========================================================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 "Not Found";
        }
        
        location = /50x.html {
            internal;
            return 500 "Internal Server Error";
        }
    }
    
    # ===========================================================================
    # Additional Security: Block Malicious IPs and User Agents
    # ===========================================================================
    
    # Block requests with no User-Agent
    map $http_user_agent $block_no_ua {
        default 0;
        "" 1;
    }
    
    # Block common bot user agents (adjust as needed)
    map $http_user_agent $block_bad_ua {
        default 0;
        ~*masscan 1;
        ~*nmap 1;
        ~*sqlmap 1;
        ~*nikto 1;
        ~*wpscan 1;
        ~*python-requests 1;  # Uncomment to block simple Python scripts
    }
    
    # Geo-blocking (example - uncomment and configure as needed)
    # geo $geo_block {
    #     default 0;
    #     # 192.168.1.0/24 1;  # Block specific IP ranges
    #     # include /etc/nginx/blocked_ips.conf;
    # }
}

# ==============================================================================
# Configuration Notes and Best Practices
# ==============================================================================

# This nginx configuration provides:
#
# 1. **SSL/TLS Termination**
#    - Modern TLS 1.2/1.3 protocols
#    - Strong cipher suites
#    - HSTS headers
#    - OCSP stapling support
#
# 2. **Rate Limiting**
#    - Different limits for API, health checks, and general requests
#    - Connection limiting per IP
#    - Burst handling with nodelay
#
# 3. **Security Headers**
#    - Content Security Policy
#    - XSS Protection
#    - Frame Options
#    - Content Type Options
#
# 4. **Load Balancing**
#    - Upstream configuration with health checks
#    - Least connections algorithm
#    - Keep-alive connections
#
# 5. **Performance Optimization**
#    - Gzip compression
#    - Proper buffering
#    - Connection keep-alive
#
# 6. **Monitoring and Logging**
#    - Detailed access logs
#    - Error logging
#    - Request timing information
#
# To deploy:
# 1. Copy this file to /etc/nginx/nginx.conf
# 2. Generate SSL certificates and place in /etc/nginx/ssl/
# 3. Test configuration: nginx -t
# 4. Reload: nginx -s reload
#
# For production use:
# - Replace server_name with your actual domain
# - Configure proper SSL certificates
# - Adjust rate limits based on your requirements
# - Consider implementing IP whitelisting/blacklisting
# - Set up proper log rotation